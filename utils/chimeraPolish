#!/bin/bash
set -e
#################################################################
#source ~/.bash_profile
#source ~/software/conda/source-conda-for-scripts.sh
#conda activate miniasm
#conda activate medaka
#conda activate medakaOct2022


## Collecting some VARs
export SCRIPTNAME=$( basename ${0} )
export SUBSCRIPTDIR=$( dirname ${0} )
if [ -z ${UTILS} ]; then export UTILS=$( dirname ${0} ) ; fi	## should be same as SUBSCRIPT DIR ; if running racoonFlyFish, it will already be in ENV, else it will be taken from versions.txt
export PATH=${UTILS}:${PATH}					## To be sure ; and especially when this script run directly.

## Early source needs
source ${UTILS}/versions.txt
source ${UTILS}/helper-functions.txt



## VERSION MESSAGE
version_check ${@}


## HELP
if [ $# -eq 0 ]; then chimerahelp ; exit ; fi





##############################################################################
## REQUIRED
##############################################################################
export FOFN=""
export READS=""

## RaCon
export X=""     #map-ont map-pb

## Flye
export GSIZE=""
export READTYPE=""      #nano-hq        #nano-raw

## Medaka
export MODEL=""	## r941_min_sup_g507

##############################################################################
## DEFAULTS
##############################################################################
export SCRIPTDIR=${SCRIPTDIR}	## Empty if using this script directly, i.e. not using racoonFlyFish

export THREADS=16
export P=${THREADS}

#export CHIMERA_RACONROUNDS=1
#export CHIMERA_FLYEROUNDS=1
#export CHIMERA_MEDAKAROUNDS=1

export RACONITERS=1
export FLYEITERS=1
export MEDAKAITERS=1


export MAINWD=${PWD}
export SLURM=false      ## if true, THREADS or P also used for NTASKS
export TIME=24:00:00    ## SLURM option
export MEM=120G          ## SLURM option


export MEDAKA=$( which medaka_consensus )
export MM2=$( which minimap2 )
export MINIMAP2=$( which minimap2 )
export FLYE=$( which flye )
export RACON=$( which racon )


export DEBUG=true
export CONTINUE=true
export HELP=false
export VERBOSE=false


##############################################################################
## GET OPTS
##############################################################################
while getopts "i:R:t:r:f:k:ST:M:x:G:d:m:v" arg; do
    case $arg in
        i) export FOFN=${OPTARG} ; FOFNMODE=true ;;
        R) export READS=${OPTARG} ;;
        t) export THREADS=${OPTARG} ; export P=${THREADS} ;;
        r) export RACONITERS=${OPTARG} ;;
        f) export FLYEITERS=${OPTARG} ;;
        k) export MEDAKAITERS=${OPTARG} ;;
        S) export SLURM=true ;;
        T) export TIME=${OPTARG} ;;
        M) export MEM=${OPTARG} ;;
        x) export X=${OPTARG} ;;
        G) export GSIZE=${OPTARG} ;;
        d) export READTYPE=--${OPTARG} ;;
        m) export MODEL=${OPTARG} ;;
        v) export VERBOSE=true ;;
        *) help; exit;;
    esac
done




##############################################################################
## PROCESSING ARGS
##############################################################################
if [ -z ${MM2} ]; then echo "minimap2 not found in PATH. Please add it to PATH. Exiting..." ; echo ; chimerahelp ; exit ; fi
if [ -z ${FLYE} ]; then echo "flye not found in PATH. Please add it to PATH. Exiting..." ; echo ; chimerahelp ; exit ; fi
if [ -z ${RACON} ]; then echo "racon not found in PATH. Please add it to PATH. Exiting..." ; echo ; chimerahelp ; exit ; fi
if [ -z ${MEDAKA} ]; then echo "medaka_consensus not found in PATH. Please add it to PATH. Exiting..." ; echo ; chimerahelp ; exit ; fi


for REQUIRED in FOFN READS X GSIZE READTYPE MODEL  ; do echo -e "REQUIRED\t${REQUIRED}\t${!REQUIRED}" ; if [ -z ${!REQUIRED} ]; then echo ${REQUIRED} is a required argument. Not given. Exiting. ; echo ; flyhelp ; fi ; done
for ARG in RACONITERS FLYEITERS MEDAKAITERS THREADS SLURM TIME MEM ; do echo -e "OPTIONS\t${ARG}\t${!ARG}" ; done




##############################################################################
## EXECUTE
##############################################################################
chimera_polish_loop

exit


