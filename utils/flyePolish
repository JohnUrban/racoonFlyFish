#!/bin/bash
set -e
#################################################################


## Collecting some VARs
export SCRIPTNAME=$( basename ${0} )
export SUBSCRIPTDIR=$( dirname ${0} )
if [ -z ${UTILS} ]; then export UTILS=$( dirname ${0} ) ; fi	## should be same as SUBSCRIPT DIR ; if running racoonFlyFish, it will already be in ENV, else it will be taken from versions.txt
export PATH=${UTILS}:${PATH}					## To be sure ; and especially when this script run directly.

## Early source needs
source ${UTILS}/versions.txt
source ${UTILS}/helper-functions.txt



## VERSION MESSAGE
version_check ${@}


## HELP
if [ $# -eq 0 ]; then flyhelp ; exit ; fi





#source ~/.bash_profile
#source ~/software/conda/source-conda-for-scripts.sh


##############################################################################
## REQUIRED
##############################################################################
export FOFN=""
export READS=""
export GSIZE=""
export READTYPE=""	#nano-hq	#nano-raw

##############################################################################
## DEFAULTS
##############################################################################
export SCRIPTDIR=${SCRIPTDIR}	## Empty if using this script directly, i.e. not using racoonFlyFish


export THREADS=16
export P=${THREADS}

export FLYEROUNDS=4
export ITERS=${FLYEROUNDS}
export ROUNDS=${FLYEROUNDS}

export MAINWD=${PWD}
export SLURM=false      ## if true, THREADS or P also used for NTASKS
export TIME=12:00:00    ## SLURM option
export MEM=80G          ## SLURM option

export MM2=$( which minimap2 )
export FLYE=$( which flye )

export ALLVARS=""
export P=16
export MEM=80G
export TIME=8:00:00

export ITERS=${FLYEROUNDS}
export FLYE=$( which flye )


export DEBUG=true
export CONTINUE=true
export HELP=false
export VERBOSE=false
export FLYEHELP=false


##############################################################################
## GET OPTS
##############################################################################
while getopts "i:R:t:r:ST:M:G:d:Hv" arg; do
    case $arg in
        i) export FOFN=${OPTARG} ; FOFNMODE=true ;;
        R) export READS=${OPTARG} ;;
        r) export ROUNDS=${OPTARG} ; export ITERS=${OPTARG} ; export FLYEROUNDS=${OPTARG} ;;
        t) export THREADS=${OPTARG} ; export P=${THREADS} ;;
        S) export SLURM=true ;;
        T) export TIME=${OPTARG} ;;
        M) export MEM=${OPTARG} ;;
        G) export GSIZE=${OPTARG} ;;
        d) export READTYPE="--"${OPTARG} ;;	## d for datatype
        H) export FLYEHELP=true ;;
        v) export VERBOSE=true ;;
        *) help; exit;;
    esac
done




##############################################################################
## PROCESSING ARGS
##############################################################################
if [ -z ${FLYE} ]; then echo "Flye not found in PATH. Please add it to PATH. Exiting..." ; echo ; flyhelp ; exit ; fi
if $FLYEHELP ; then flye --version ; flye --help ; fi

for REQUIRED in FOFN READS GSIZE READTYPE ; do echo -e "REQUIRED\t${REQUIRED}\t${!REQUIRED}" ; if [ -z ${!REQUIRED} ]; then echo ${REQUIRED} is a required argument. Not given. Exiting. ; echo ; flyhelp ; fi ; done
for ARG in ROUNDS THREADS SLURM TIME MEM ; do echo -e "OPTIONS\t${ARG}\t${!ARG}" ; done




##############################################################################
## EXECUTE
##############################################################################
flye_polish_loop
